#!/usr/bin/env python
################################################################
#
# Copyright (c) 2016-2017 EnterpriseDB - All rights reserved.
# Author: Raghavendra Rao
#
# Below options are allowed with DMA tool
# -conn - connection string
# -l - Complete DMA logs location
# -s - Assessment schema or schemas (Eg: s1,s2)
# -o - Assessment generate object logs or HTMl Default Both
#
################################################################
import sys
import argparse

objects_list = ['ALL',
                'CLUSTER',
                'FUNCTION',
                'INDEX',
                'JAVA CLASS',
                'JOB'
                'LOB',
                'PACKAGE',
                'PACKAGE BODY'
                'PROCEDURE',
                'PROGRAM',
                'SEQUENCE',
                'SYNONYM',
                'TABLE',
                'TRIGGER',
                'TYPE',
                'TYPE BODY',
                'VIEW',
                'MATERIALIZED VIEW'
                'SQL']

cli_parser = argparse.ArgumentParser (prog='edb-dmat',
                                      description='EDB Database Migration Assessment tool',
                                      usage='use "%(prog)s --help" for more information',
                                      )  # formatter_class=argparse.RawTextHelpFormatter)

cli_parser.add_argument ('-v', '--version',
                         action='version',
                         version='%(prog)s 1.2',
                         help='DMA Tool binary version')

cli_parser.add_argument ('-c', '--conn',
                         dest='ora_conn_string',
                         metavar="",
                         help="""Oracle Connection String in the format  
                            'username/password@host:port/sid-or-service'""")

cli_parser.add_argument ('-S', '--sql',
                         dest='sql_file',
                         metavar="",
                         help='Pass Oracle SQL Dump file generated by IMPDP/DBMS_METADATA')

cli_parser.add_argument ('-O', '--object',
                         dest='object_type',
                         choices=objects_list,
                         metavar="",
                         help='Oracle Object %s to assess from SQL Dump file' % objects_list)

cli_parser.add_argument ('-s', '--schema',
                         metavar="",
                         dest='assessment_schema',
                         help='Assessment schema name')

cli_parser.add_argument ('-l', '--logs',
                         dest='assessment_logs_location',
                         metavar="",
                         help='DMA html/logs location')

cli_parser.add_argument ('-r', '--report',
                         dest='dma_report_format',
                         metavar="",
                         default='BOTH',
                         help='''Assessment report can be any \n
                                HTML or LOG or BOTH defaul: BOTH \n''')

cli_args = cli_parser.parse_args ()

if len (sys.argv) == 1:
    cli_parser.print_help ()
    sys.exit (1)
